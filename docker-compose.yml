version: '3' #give a version number
services: # Define services
  postgres:
    image: 'postgres:latest' #get the latest postgres image
  redis:
    image: 'redis:latest' #get latest redis image
  nginx:
    restart: always
    build:
      dockerfile: Dockerfile.dev
      context: ./nginx
    ports:
      - '3050:80'
  api:
    build:
      dockerfile: Dockerfile.dev # use the docker dev file to build the image
      context: ./server # location of the docker dev file
    volumes: #mount volumes from local to the docker image
      - /app/node_modules # ignore node_module when copying
      - ./server:/app # copy everything else to the app folder from the server folder
    environment: #specify enviornment variables
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - PGUSER=postgres
      - PGHOST=postgres
      - PGDATABASE=postgres
      - PGPASSWORD=postgres_password
      - PGPORT=5432
    depends_on:
      - postgres
  client:
    build:
      dockerfile: Dockerfile.dev
      context: ./client
    volumes:
      - /app/node_modules
      - ./client:/app
  worker:
    build:
      dockerfile: Dockerfile.dev
      context: ./worker
    volumes:
      - /app/node_modules
      - ./worker:/app
    environment:
      - REDIS_HOST=redis
      - REDIS_PORT=6379

